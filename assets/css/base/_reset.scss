@import "variables";
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

ul {
  list-style: none;
}

img {
  max-width: 100%;
  vertical-align: middle;
  height: auto;
}

a {
  text-decoration: none;
  transition: 0.3s;
  color: $black;
}

// =========common class=======
.section_padding {
  padding: 80px 0;
}

.overlay {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  position: relative;
  z-index: 2;
  &::before {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    background-color: $black;
    opacity: 0.8;
    z-index: -1;
  }
}

// button css

.btn {
  outline: none;
  border: none;
  display: inline-block;
  color: $black;
  padding: 10px 40px;
  border-radius: 5px;
  font-size: 18px;
  text-transform: capitalize;
  transition: 0.3s;

  &.btn_fill {
    background-color: $primary;
    color: $white;
    &:hover {
      background-color: darken($primary, 40);
    }
  }
}

//====== flex css ========
$flex_values: flex, inline-flex;
@each $value in $flex_values {
  .d-#{$value} {
    display: $value;
  }
}

$justify_content_values: start, end, center, space-between, space-around, space-evenly;
@each $value in $justify_content_values {
  .justify-#{$value} {
    justify-content: $value;
  }
}

$align_content_values: stretch, center, start, end, space-between, space-around, space-evenly;
@each $value in $align_content_values {
  .align-content-#{$value} {
    align-content: $value;
  }
}

$align_item_values: stretch, center, start, end;
@each $value in $align_item_values {
  .align-items-#{$value} {
    align-items: $value;
  }
}

$align_self_values: stretch, center, start, end;
@each $value in $align_self_values {
  .align-self-#{$value} {
    align-self: $value;
  }
}
